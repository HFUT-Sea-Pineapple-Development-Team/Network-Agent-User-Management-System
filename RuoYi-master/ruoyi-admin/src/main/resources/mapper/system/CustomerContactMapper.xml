<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.CustomerContactMapper">
    
    <resultMap type="CustomerContact" id="CustomerContactResult">
        <result property="id"    column="id"    />
        <result property="contactName"    column="contact_name"    />
        <result property="cusId"    column="cus_id"    />
        <result property="contactTime"    column="contact_time"    />
        <result property="overview"    column="overview"    />
        <result property="description"    column="description"    />
        <result property="contactStyle"    column="contact_style"    />
        <result property="createDate"    column="create_date"    />
        <result property="updateDate"    column="update_date"    />
    </resultMap>

    <sql id="selectCustomerContactVo">
        select id, contact_name, cus_id, contact_time, overview, description, contact_style, create_date, update_date from customer_contact
    </sql>

    <select id="selectCustomerContactList" parameterType="CustomerContact" resultMap="CustomerContactResult">
        <include refid="selectCustomerContactVo"/>
        <where>  
            <if test="contactName != null  and contactName != ''"> and contact_name like concat('%', #{contactName}, '%')</if>
            <if test="cusId != null "> and cus_id = #{cusId}</if>
            <if test="contactTime != null "> and contact_time = #{contactTime}</if>
            <if test="contactStyle != null  and contactStyle != ''"> and contact_style = #{contactStyle}</if>
        </where>
    </select>
    
    <select id="selectCustomerContactById" parameterType="Long" resultMap="CustomerContactResult">
        <include refid="selectCustomerContactVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertCustomerContact" parameterType="CustomerContact">
        insert into customer_contact
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="contactName != null and contactName != ''">contact_name,</if>
            <if test="cusId != null">cus_id,</if>
            <if test="contactTime != null">contact_time,</if>
            <if test="overview != null">overview,</if>
            <if test="description != null">description,</if>
            <if test="contactStyle != null">contact_style,</if>
            <if test="createDate != null">create_date,</if>
            <if test="updateDate != null">update_date,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="contactName != null and contactName != ''">#{contactName},</if>
            <if test="cusId != null">#{cusId},</if>
            <if test="contactTime != null">#{contactTime},</if>
            <if test="overview != null">#{overview},</if>
            <if test="description != null">#{description},</if>
            <if test="contactStyle != null">#{contactStyle},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="updateDate != null">#{updateDate},</if>
         </trim>
    </insert>

    <update id="updateCustomerContact" parameterType="CustomerContact">
        update customer_contact
        <trim prefix="SET" suffixOverrides=",">
            <if test="contactName != null and contactName != ''">contact_name = #{contactName},</if>
            <if test="cusId != null">cus_id = #{cusId},</if>
            <if test="contactTime != null">contact_time = #{contactTime},</if>
            <if test="overview != null">overview = #{overview},</if>
            <if test="description != null">description = #{description},</if>
            <if test="contactStyle != null">contact_style = #{contactStyle},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="updateDate != null">update_date = #{updateDate},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCustomerContactById" parameterType="Long">
        delete from customer_contact where id = #{id}
    </delete>

    <delete id="deleteCustomerContactByIds" parameterType="String">
        delete from customer_contact where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>